steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      [
        '-c',
        'docker pull ${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:latest || exit 0',
      ]
    id: 'pull-latest-image'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--cache-from'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:latest'
      - '-t'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:$COMMIT_SHA'
      - '-t'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:latest'
      - '.'
      - 'f'
      - 'Dockerfile'
    dir: 'functions'
    id: 'build-image'
    waitFor: ['pull-latest-image']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:$COMMIT_SHA'
    id: 'push-image-sha'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:latest'
    id: 'push-image-latest'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'meeting-app'
      - '--image'
      - '${_AR_HOSTNAME}/$PROJECT_ID/$REPOSTORY_NAME/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--cpu-throttling'
      - '--no-cpu-boost'
      - '--execution-environment'
      - 'gen2'
    id: 'deploy-cloud-run'
    waitFor: ['push-image-sha']

# ビルド設定
options:
  # 並列実行でビルド時間短縮
  substitutionOption: 'ALLOW_LOOSE'
  # ログレベル設定
  logging: CLOUD_LOGGING_ONLY

# 置換変数
substitutions:
  _AR_HOSTNAME: 'asia-northeast1-docker.pkg.dev'
  _SERVICE_NAME: 'api'
  _REGION: 'asia-northeast1'
  _REPOSITORY: 'asia-northeast1-docker.pkg.dev/mac-sdo-hackathon/functions'

# タイムアウト設定（20分）
timeout: '1200s'
